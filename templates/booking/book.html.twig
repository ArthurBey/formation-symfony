{% extends 'base.html.twig' %}

{% block title %}Réservation{% endblock %}
{% block stylesheets %} {#On surcharge block stylesheets pour ajouter le css du calendrier bootsrap-datepicker #}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/css/bootstrap-datepicker.min.css">
{% endblock %}

{% block body %}
    <div class="container">
        <h1>Réserver le logement : <em>{{ ad.title }}</em></h1>

        <p>Vous êtes sur le point de réserver le bien de <strong>{{ ad.author.fullName }}</strong></p>

        {{ form_start(form) }}
        <div class="alert alert-light">
            <h4 class="mt-2">Indiquez les dates de votre séjour</h4>
            <div class="row">
                <div class="col">
                    {{ form_row(form.startDate) }}
                </div>
                <div class="col">
                    {{ form_row(form.endDate) }}
                </div>
            </div>

            <h4>Montant total du séjour: <span id="amount">...</span> &euro;</h4> 
            <p><span id="days">0</span> nuit(s) à {{ad.price | number_format(2, ',', ' ')}}&euro; par nuit</p> {# number_format() iddentique à celle en PHP, pour afficher le prix au centième près #}
            <h4 class="mt-3">Une remarque à faire ?</h4>
            {{ form_row(form.comment) }}
        </div>
        <button type="submit" class="btn btn-success">Je réserve !</button>
        {{ form_end(form) }}
    </div>
{% endblock %}

{% block javascripts %} {# JS date-picker #}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js"></script>
    <script>
        $(document).ready(function(){ // ready() -> lorsque document ready

            // les 2 champs pour les dates sont iddentifiés par ces 2 ID
            $('#booking_startDate, #booking_endDate').datepicker(
                { 
                    format: 'dd/mm/yyyy', // cf docu de datepicker...
                    datesDisabled: [
                        {% for day in ad.notAvailableDays %}
                            "{{ day.format('d/m/Y') }}",
                        {% endfor %}
                    ],
                    startDate: new Date() // Pour bloquer jours d'hier
                });

             $('#booking_startDate, #booking_endDate').on('change', calculateAmount);
        });

        // Calcul du prix / et nb de nuitées
        function calculateAmount() {
            const endDate = new Date($('#booking_endDate').val().replace(/(\d+)\/(\d+)\/(\d{4})/, // Objet Date de JS / .val pour récup valeur / .replace selon une Regex
            '$3-$2-$1')); // $3 année, $2 mois...
            // .replace pour -> 18/09/2020 -> 2020-09-18 / Car l'objet Date ne peut recevoir une date en FR...
            const startDate = new Date($('#booking_startDate').val().replace(/(\d+)\/(\d+)\/(\d{4})/, '$3-$2-$1'));

            if(startDate && endDate && startDate < endDate){
                const DAY_TIME = 24 * 60 * 60 * 1000; // en millisecondes
                const interval = endDate.getTime() - startDate.getTime(); //getTime méthode des objet Date de JS retourne un Timestamp. ça donne l'intervalle en ms
                const days = interval / DAY_TIME; // On obtient la durée du séjour en jours
                const amount = days * {{ ad.price }}; // On obtient le prix total

                $('#days').text(days); //correspond au span id days
                $('#amount').text(amount.toLocaleString('fr-FR')); // span id amount
            }
        }
        
    </script>
{% endblock %}
