security:
    encoders:
        App\Entity\User:
            algorithm: auto

    
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers: # un provider précise d'où viennent les données de l'user
        users_in_memory: { memory: null }
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        # used to reload user from session & other features (e.g. switch_user)

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        admin:
            pattern: ^/admin # Le pattern d'un firewall est une regex qui permet de délimiter la partie à sécuriser
            anonymous: true # Car on a délimité une url ou anonymes peuvent se co dans l'access_control
            provider: app_user_provider #D'où viennent les user qui se co
            guard:
                authenticators:
                    - App\Security\AdminCustomAuthenticator
            logout:
                path: admin_logout
                # where to redirect after logout
                target: home
            
        main:
            anonymous: true
            lazy: true
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\AppCustomAuthenticator
            logout:
                path: account_logout
                # where to redirect after logout
                target: home
            
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }  # On rend tout de même la page de login admin accessible à tous
        - { path: ^/admin, roles: ROLE_ADMIN }  # Tout ce qui commence par /admin, nécessite ROLE_ADMIN
        # - { path: ^/profile, roles: ROLE_USER }
